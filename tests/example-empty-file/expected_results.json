{
  "version": 1,
  "status": "fail",
  "output": "\u001b[01;31m\u001b[K── Error (???): year not divisible by 4: common year ───────────────────────────\u001b[m\u001b[K\nError: could not find function \"leap\"\nBacktrace:\n 1. testthat::expect_equal(leap(year), FALSE)\n 2. testthat::quasi_label(enquo(object), label, arg = \"object\")\n 3. rlang::eval_bare(expr, quo_get_env(quo))\n\n\u001b[01;31m\u001b[K── Error (???): year divisible by 4, not divisible by 100: leap year ───────────\u001b[m\u001b[K\nError: could not find function \"leap\"\nBacktrace:\n 1. testthat::expect_equal(leap(year), TRUE)\n 2. testthat::quasi_label(enquo(object), label, arg = \"object\")\n 3. rlang::eval_bare(expr, quo_get_env(quo))\n\n\u001b[01;31m\u001b[K── Error (???): year divisible by 100, not divisible by 400: common year ───────\u001b[m\u001b[K\nError: could not find function \"leap\"\nBacktrace:\n 1. testthat::expect_equal(leap(year), FALSE)\n 2. testthat::quasi_label(enquo(object), label, arg = \"object\")\n 3. rlang::eval_bare(expr, quo_get_env(quo))\n\n\u001b[01;31m\u001b[K── Error (???): year divisible by 400: leap year ───────────────────────────────\u001b[m\u001b[K\nError: could not find function \"leap\"\nBacktrace:\n 1. testthat::expect_equal(leap(year), TRUE)\n 2. testthat::quasi_label(enquo(object), label, arg = \"object\")\n 3. rlang::eval_bare(expr, quo_get_env(quo))\n\nAll tests passed for exercise: leap"
}
